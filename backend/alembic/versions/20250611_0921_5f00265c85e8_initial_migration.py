"""initial migration


Revision ID: 5f00265c85e8
Revises: 
Create Date: 2025-06-11 09:21:25.269104-06:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '5f00265c85e8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academic_unit_types',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('hierarchy_level', sa.Integer(), nullable=False),
    sa.Column('abbreviation', sa.String(length=10), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('allows_students', sa.Boolean(), nullable=False),
    sa.Column('allows_faculty', sa.Boolean(), nullable=False),
    sa.Column('requires_approval', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('academic_unit_types', schema=None) as batch_op:
        batch_op.create_index('idx_academic_unit_type_active', ['is_active'], unique=False)
        batch_op.create_index('idx_academic_unit_type_hierarchy', ['hierarchy_level'], unique=False)
        batch_op.create_index('idx_academic_unit_type_name', ['name'], unique=False)

    op.create_table('areas',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('short_name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('specialization', sa.String(length=100), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('can_lead_projects', sa.Boolean(), nullable=False),
    sa.Column('requires_collaboration', sa.Boolean(), nullable=False),
    sa.Column('max_concurrent_projects', sa.Integer(), nullable=True),
    sa.Column('estimated_capacity_hours', sa.Integer(), nullable=True),
    sa.Column('total_members', sa.Integer(), nullable=False),
    sa.Column('active_projects', sa.Integer(), nullable=False),
    sa.Column('completed_projects', sa.Integer(), nullable=False),
    sa.Column('contact_email', sa.String(length=150), nullable=True),
    sa.Column('contact_phone', sa.String(length=50), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('areas', schema=None) as batch_op:
        batch_op.create_index('idx_area_active', ['is_active'], unique=False)
        batch_op.create_index('idx_area_can_lead', ['can_lead_projects'], unique=False)
        batch_op.create_index('idx_area_category', ['category'], unique=False)
        batch_op.create_index('idx_area_name', ['name'], unique=False)

    op.create_table('institutional_users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('profile_photo', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('preferred_language', sa.String(length=10), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('account_locked', sa.Boolean(), nullable=False),
    sa.Column('institution', sa.String(length=200), nullable=False),
    sa.Column('faculty_id', sa.String(length=50), nullable=True),
    sa.Column('academic_title', sa.String(length=100), nullable=True),
    sa.Column('position_title', sa.String(length=150), nullable=True),
    sa.Column('office_phone', sa.String(length=50), nullable=True),
    sa.Column('office_location', sa.String(length=200), nullable=True),
    sa.Column('is_faculty', sa.Boolean(), nullable=False),
    sa.Column('is_student', sa.Boolean(), nullable=False),
    sa.Column('is_external_client', sa.Boolean(), nullable=False),
    sa.Column('can_request_projects', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=False),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('password_changed_at', sa.DateTime(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('sms_notifications', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('uuid', mysql.CHAR(length=36), nullable=False, comment='Public unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('institutional_users', schema=None) as batch_op:
        batch_op.create_index('idx_institutional_user_active', ['is_active'], unique=False)
        batch_op.create_index('idx_institutional_user_active_created', ['is_active', 'created_at'], unique=False)
        batch_op.create_index('idx_institutional_user_email', ['email'], unique=False)
        batch_op.create_index('idx_institutional_user_faculty_id', ['faculty_id'], unique=False)
        batch_op.create_index('idx_institutional_user_institution', ['institution'], unique=False)
        batch_op.create_index('idx_institutional_user_search', ['first_name', 'last_name', 'username'], unique=False)
        batch_op.create_index('idx_institutional_user_types', ['is_faculty', 'is_student', 'is_external_client'], unique=False)
        batch_op.create_index('idx_institutional_user_username', ['username'], unique=False)
        batch_op.create_index('idx_institutional_user_uuid', ['uuid'], unique=False)
        batch_op.create_index(batch_op.f('ix_institutional_users_uuid'), ['uuid'], unique=True)

    op.create_table('internal_users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('profile_photo', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('banner_photo', sa.String(length=500), nullable=True),
    sa.Column('preferred_language', sa.String(length=10), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('account_locked', sa.Boolean(), nullable=False),
    sa.Column('employee_id', sa.String(length=50), nullable=True),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('can_access_dashboard', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=False),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('password_changed_at', sa.DateTime(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('sms_notifications', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('uuid', mysql.CHAR(length=36), nullable=False, comment='Public unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('employee_id'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('internal_users', schema=None) as batch_op:
        batch_op.create_index('idx_internal_user_active', ['is_active'], unique=False)
        batch_op.create_index('idx_internal_user_active_created', ['is_active', 'created_at'], unique=False)
        batch_op.create_index('idx_internal_user_dashboard_access', ['can_access_dashboard'], unique=False)
        batch_op.create_index('idx_internal_user_email', ['email'], unique=False)
        batch_op.create_index('idx_internal_user_employee_id', ['employee_id'], unique=False)
        batch_op.create_index('idx_internal_user_search', ['first_name', 'last_name', 'username'], unique=False)
        batch_op.create_index('idx_internal_user_username', ['username'], unique=False)
        batch_op.create_index('idx_internal_user_uuid', ['uuid'], unique=False)
        batch_op.create_index(batch_op.f('ix_internal_users_uuid'), ['uuid'], unique=True)

    op.create_table('permissions',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('resource', sa.String(length=50), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('permissions', schema=None) as batch_op:
        batch_op.create_index('idx_permission_active', ['is_active'], unique=False)
        batch_op.create_index('idx_permission_category', ['category'], unique=False)
        batch_op.create_index('idx_permission_name', ['name'], unique=False)

    op.create_table('roles',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('role_type', sa.String(length=50), nullable=False),
    sa.Column('target_user_type', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('max_assignments', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index('idx_role_active', ['is_active'], unique=False)
        batch_op.create_index('idx_role_level', ['level'], unique=False)
        batch_op.create_index('idx_role_name', ['name'], unique=False)
        batch_op.create_index('idx_role_type', ['role_type'], unique=False)

    op.create_table('academic_units',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('short_name', sa.String(length=100), nullable=True),
    sa.Column('abbreviation', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('academic_unit_type_id', sa.Integer(), nullable=False),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('email', sa.String(length=150), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('building', sa.String(length=100), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('color_primary', sa.String(length=20), nullable=True),
    sa.Column('color_secondary', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('allows_public_content', sa.Boolean(), nullable=False),
    sa.Column('requires_approval', sa.Boolean(), nullable=False),
    sa.Column('total_students', sa.Integer(), nullable=False),
    sa.Column('total_faculty', sa.Integer(), nullable=False),
    sa.Column('total_projects', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.ForeignKeyConstraint(['academic_unit_type_id'], ['academic_unit_types.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('abbreviation')
    )
    with op.batch_alter_table('academic_units', schema=None) as batch_op:
        batch_op.create_index('idx_academic_unit_abbreviation', ['abbreviation'], unique=False)
        batch_op.create_index('idx_academic_unit_active', ['is_active'], unique=False)
        batch_op.create_index('idx_academic_unit_name', ['name'], unique=False)
        batch_op.create_index('idx_academic_unit_type', ['academic_unit_type_id'], unique=False)

    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('grant_type', sa.String(length=20), nullable=False),
    sa.Column('assigned_reason', sa.String(length=500), nullable=True),
    sa.Column('valid_from', sa.DateTime(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.Column('context_restrictions', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_id', 'permission_id', name='uq_role_permission')
    )
    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.create_index('idx_role_permission_active', ['is_active'], unique=False)
        batch_op.create_index('idx_role_permission_permission', ['permission_id'], unique=False)
        batch_op.create_index('idx_role_permission_role', ['role_id'], unique=False)

    op.create_table('user_areas',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.Column('role_in_area', sa.String(length=100), nullable=True),
    sa.Column('specialization', sa.String(length=150), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('can_lead_projects', sa.Boolean(), nullable=False),
    sa.Column('time_allocation_percentage', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('assignment_reason', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['internal_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'area_id', name='uq_user_area')
    )
    with op.batch_alter_table('user_areas', schema=None) as batch_op:
        batch_op.create_index('idx_user_area_active', ['is_active'], unique=False)
        batch_op.create_index('idx_user_area_area', ['area_id'], unique=False)
        batch_op.create_index('idx_user_area_area_active', ['area_id', 'is_active'], unique=False)
        batch_op.create_index('idx_user_area_can_lead', ['user_id', 'can_lead_projects'], unique=False)
        batch_op.create_index('idx_user_area_primary', ['user_id', 'is_primary'], unique=False)
        batch_op.create_index('idx_user_area_user', ['user_id'], unique=False)
        batch_op.create_index('idx_user_area_user_active', ['user_id', 'is_active'], unique=False)

    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('user_type', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('assigned_reason', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'role_id', 'user_type', name='uq_user_role_type')
    )
    with op.batch_alter_table('user_roles', schema=None) as batch_op:
        batch_op.create_index('idx_user_role_active', ['is_active'], unique=False)
        batch_op.create_index('idx_user_role_role', ['role_id'], unique=False)
        batch_op.create_index('idx_user_role_user', ['user_id'], unique=False)
        batch_op.create_index('idx_user_role_user_type', ['user_id', 'user_type'], unique=False)
        batch_op.create_index('idx_user_role_user_type_active', ['user_id', 'user_type', 'is_active'], unique=False)

    op.create_table('categories',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=150), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('academic_unit_id', sa.Integer(), nullable=False),
    sa.Column('category_type', sa.String(length=50), nullable=False),
    sa.Column('content_type_focus', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=120), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('cover_image', sa.String(length=500), nullable=True),
    sa.Column('auto_approve_content', sa.Boolean(), nullable=False),
    sa.Column('requires_review', sa.Boolean(), nullable=False),
    sa.Column('total_videos', sa.Integer(), nullable=False),
    sa.Column('total_galleries', sa.Integer(), nullable=False),
    sa.Column('total_views', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_units.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_index('idx_category_academic_unit', ['academic_unit_id'], unique=False)
        batch_op.create_index('idx_category_active', ['is_active'], unique=False)
        batch_op.create_index('idx_category_name', ['name'], unique=False)
        batch_op.create_index('idx_category_public', ['is_public'], unique=False)
        batch_op.create_index('idx_category_slug', ['slug'], unique=False)

    op.create_table('user_academic_units',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('academic_unit_id', sa.Integer(), nullable=False),
    sa.Column('relationship_type', sa.String(length=50), nullable=False),
    sa.Column('position_title', sa.String(length=150), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('degree_program', sa.String(length=200), nullable=True),
    sa.Column('academic_year', sa.String(length=20), nullable=True),
    sa.Column('graduation_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('can_represent_unit', sa.Boolean(), nullable=False),
    sa.Column('has_budget_authority', sa.Boolean(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('office_number', sa.String(length=50), nullable=True),
    sa.Column('internal_phone', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_units.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['institutional_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'academic_unit_id', name='uq_user_academic_unit')
    )
    with op.batch_alter_table('user_academic_units', schema=None) as batch_op:
        batch_op.create_index('idx_user_academic_unit_active', ['is_active'], unique=False)
        batch_op.create_index('idx_user_academic_unit_budget', ['user_id', 'has_budget_authority'], unique=False)
        batch_op.create_index('idx_user_academic_unit_primary', ['user_id', 'is_primary'], unique=False)
        batch_op.create_index('idx_user_academic_unit_relationship', ['relationship_type'], unique=False)
        batch_op.create_index('idx_user_academic_unit_represent', ['user_id', 'can_represent_unit'], unique=False)
        batch_op.create_index('idx_user_academic_unit_unit', ['academic_unit_id'], unique=False)
        batch_op.create_index('idx_user_academic_unit_unit_active', ['academic_unit_id', 'is_active'], unique=False)
        batch_op.create_index('idx_user_academic_unit_user', ['user_id'], unique=False)
        batch_op.create_index('idx_user_academic_unit_user_active', ['user_id', 'is_active'], unique=False)

    op.create_table('galleries',
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('subtitle', sa.String(length=300), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('photos', sa.JSON(), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('cover_photo', sa.String(length=500), nullable=True),
    sa.Column('event_date', sa.Date(), nullable=False),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('photo_count', sa.Integer(), nullable=False),
    sa.Column('total_size_mb', sa.Integer(), nullable=True),
    sa.Column('camera_info', sa.String(length=200), nullable=True),
    sa.Column('photographer', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('approval_required', sa.Boolean(), nullable=False),
    sa.Column('slug', sa.String(length=250), nullable=True),
    sa.Column('seo_title', sa.String(length=200), nullable=True),
    sa.Column('seo_description', sa.Text(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('share_count', sa.Integer(), nullable=False),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.Column('allow_download', sa.Boolean(), nullable=False),
    sa.Column('allow_comments', sa.Boolean(), nullable=False),
    sa.Column('watermark_enabled', sa.Boolean(), nullable=False),
    sa.Column('id', mysql.CHAR(length=36), nullable=False, comment='Public unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', mysql.CHAR(length=36), nullable=True, comment='User UUID who created this record'),
    sa.Column('updated_by', mysql.CHAR(length=36), nullable=True, comment='User UUID who last updated this record'),
    sa.ForeignKeyConstraint(['author_id'], ['internal_users.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    with op.batch_alter_table('galleries', schema=None) as batch_op:
        batch_op.create_index('idx_gallery_author', ['author_id'], unique=False)
        batch_op.create_index('idx_gallery_category', ['category_id'], unique=False)
        batch_op.create_index('idx_gallery_event_date', ['event_date'], unique=False)
        batch_op.create_index('idx_gallery_public', ['is_public'], unique=False)
        batch_op.create_index('idx_gallery_published', ['is_published'], unique=False)
        batch_op.create_index('idx_gallery_slug', ['slug'], unique=False)
        batch_op.create_index('idx_gallery_status', ['status'], unique=False)
        batch_op.create_index('idx_gallery_title', ['title'], unique=False)

    op.create_table('videos',
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('subtitle', sa.String(length=300), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('embed_url', sa.String(length=500), nullable=False),
    sa.Column('original_url', sa.String(length=500), nullable=True),
    sa.Column('video_id', sa.String(length=100), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('event_date', sa.Date(), nullable=False),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('video_quality', sa.String(length=20), nullable=True),
    sa.Column('aspect_ratio', sa.String(length=20), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('approval_required', sa.Boolean(), nullable=False),
    sa.Column('slug', sa.String(length=250), nullable=True),
    sa.Column('seo_title', sa.String(length=200), nullable=True),
    sa.Column('seo_description', sa.Text(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('share_count', sa.Integer(), nullable=False),
    sa.Column('allow_comments', sa.Boolean(), nullable=False),
    sa.Column('allow_embedding', sa.Boolean(), nullable=False),
    sa.Column('id', mysql.CHAR(length=36), nullable=False, comment='Public unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', mysql.CHAR(length=36), nullable=True, comment='User UUID who created this record'),
    sa.Column('updated_by', mysql.CHAR(length=36), nullable=True, comment='User UUID who last updated this record'),
    sa.ForeignKeyConstraint(['author_id'], ['internal_users.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    with op.batch_alter_table('videos', schema=None) as batch_op:
        batch_op.create_index('idx_video_author', ['author_id'], unique=False)
        batch_op.create_index('idx_video_category', ['category_id'], unique=False)
        batch_op.create_index('idx_video_event_date', ['event_date'], unique=False)
        batch_op.create_index('idx_video_public', ['is_public'], unique=False)
        batch_op.create_index('idx_video_published', ['is_published'], unique=False)
        batch_op.create_index('idx_video_slug', ['slug'], unique=False)
        batch_op.create_index('idx_video_status', ['status'], unique=False)
        batch_op.create_index('idx_video_title', ['title'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('videos', schema=None) as batch_op:
        batch_op.drop_index('idx_video_title')
        batch_op.drop_index('idx_video_status')
        batch_op.drop_index('idx_video_slug')
        batch_op.drop_index('idx_video_published')
        batch_op.drop_index('idx_video_public')
        batch_op.drop_index('idx_video_event_date')
        batch_op.drop_index('idx_video_category')
        batch_op.drop_index('idx_video_author')

    op.drop_table('videos')
    with op.batch_alter_table('galleries', schema=None) as batch_op:
        batch_op.drop_index('idx_gallery_title')
        batch_op.drop_index('idx_gallery_status')
        batch_op.drop_index('idx_gallery_slug')
        batch_op.drop_index('idx_gallery_published')
        batch_op.drop_index('idx_gallery_public')
        batch_op.drop_index('idx_gallery_event_date')
        batch_op.drop_index('idx_gallery_category')
        batch_op.drop_index('idx_gallery_author')

    op.drop_table('galleries')
    with op.batch_alter_table('user_academic_units', schema=None) as batch_op:
        batch_op.drop_index('idx_user_academic_unit_user_active')
        batch_op.drop_index('idx_user_academic_unit_user')
        batch_op.drop_index('idx_user_academic_unit_unit_active')
        batch_op.drop_index('idx_user_academic_unit_unit')
        batch_op.drop_index('idx_user_academic_unit_represent')
        batch_op.drop_index('idx_user_academic_unit_relationship')
        batch_op.drop_index('idx_user_academic_unit_primary')
        batch_op.drop_index('idx_user_academic_unit_budget')
        batch_op.drop_index('idx_user_academic_unit_active')

    op.drop_table('user_academic_units')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index('idx_category_slug')
        batch_op.drop_index('idx_category_public')
        batch_op.drop_index('idx_category_name')
        batch_op.drop_index('idx_category_active')
        batch_op.drop_index('idx_category_academic_unit')

    op.drop_table('categories')
    with op.batch_alter_table('user_roles', schema=None) as batch_op:
        batch_op.drop_index('idx_user_role_user_type_active')
        batch_op.drop_index('idx_user_role_user_type')
        batch_op.drop_index('idx_user_role_user')
        batch_op.drop_index('idx_user_role_role')
        batch_op.drop_index('idx_user_role_active')

    op.drop_table('user_roles')
    with op.batch_alter_table('user_areas', schema=None) as batch_op:
        batch_op.drop_index('idx_user_area_user_active')
        batch_op.drop_index('idx_user_area_user')
        batch_op.drop_index('idx_user_area_primary')
        batch_op.drop_index('idx_user_area_can_lead')
        batch_op.drop_index('idx_user_area_area_active')
        batch_op.drop_index('idx_user_area_area')
        batch_op.drop_index('idx_user_area_active')

    op.drop_table('user_areas')
    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.drop_index('idx_role_permission_role')
        batch_op.drop_index('idx_role_permission_permission')
        batch_op.drop_index('idx_role_permission_active')

    op.drop_table('role_permissions')
    with op.batch_alter_table('academic_units', schema=None) as batch_op:
        batch_op.drop_index('idx_academic_unit_type')
        batch_op.drop_index('idx_academic_unit_name')
        batch_op.drop_index('idx_academic_unit_active')
        batch_op.drop_index('idx_academic_unit_abbreviation')

    op.drop_table('academic_units')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index('idx_role_type')
        batch_op.drop_index('idx_role_name')
        batch_op.drop_index('idx_role_level')
        batch_op.drop_index('idx_role_active')

    op.drop_table('roles')
    with op.batch_alter_table('permissions', schema=None) as batch_op:
        batch_op.drop_index('idx_permission_name')
        batch_op.drop_index('idx_permission_category')
        batch_op.drop_index('idx_permission_active')

    op.drop_table('permissions')
    with op.batch_alter_table('internal_users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_internal_users_uuid'))
        batch_op.drop_index('idx_internal_user_uuid')
        batch_op.drop_index('idx_internal_user_username')
        batch_op.drop_index('idx_internal_user_search')
        batch_op.drop_index('idx_internal_user_employee_id')
        batch_op.drop_index('idx_internal_user_email')
        batch_op.drop_index('idx_internal_user_dashboard_access')
        batch_op.drop_index('idx_internal_user_active_created')
        batch_op.drop_index('idx_internal_user_active')

    op.drop_table('internal_users')
    with op.batch_alter_table('institutional_users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_institutional_users_uuid'))
        batch_op.drop_index('idx_institutional_user_uuid')
        batch_op.drop_index('idx_institutional_user_username')
        batch_op.drop_index('idx_institutional_user_types')
        batch_op.drop_index('idx_institutional_user_search')
        batch_op.drop_index('idx_institutional_user_institution')
        batch_op.drop_index('idx_institutional_user_faculty_id')
        batch_op.drop_index('idx_institutional_user_email')
        batch_op.drop_index('idx_institutional_user_active_created')
        batch_op.drop_index('idx_institutional_user_active')

    op.drop_table('institutional_users')
    with op.batch_alter_table('areas', schema=None) as batch_op:
        batch_op.drop_index('idx_area_name')
        batch_op.drop_index('idx_area_category')
        batch_op.drop_index('idx_area_can_lead')
        batch_op.drop_index('idx_area_active')

    op.drop_table('areas')
    with op.batch_alter_table('academic_unit_types', schema=None) as batch_op:
        batch_op.drop_index('idx_academic_unit_type_name')
        batch_op.drop_index('idx_academic_unit_type_hierarchy')
        batch_op.drop_index('idx_academic_unit_type_active')

    op.drop_table('academic_unit_types')
    # ### end Alembic commands ###