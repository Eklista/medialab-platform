"""Add auth tables

Revision ID: 5f42063c1db7
Revises: 3047e5b0c914
Create Date: 2025-06-12 19:43:35.373055-06:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5f42063c1db7'
down_revision = '3047e5b0c914'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_sessions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_type', sa.String(length=50), nullable=False),
    sa.Column('session_id', sa.String(length=128), nullable=False),
    sa.Column('refresh_token_id', sa.String(length=128), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('device_fingerprint', sa.String(length=128), nullable=True),
    sa.Column('device_name', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity', sa.DateTime(), nullable=False),
    sa.Column('is_2fa_verified', sa.Boolean(), nullable=False),
    sa.Column('is_oauth_session', sa.Boolean(), nullable=False),
    sa.Column('oauth_provider', sa.String(length=50), nullable=True),
    sa.Column('login_method', sa.String(length=50), nullable=False),
    sa.Column('session_type', sa.String(length=20), nullable=False),
    sa.Column('logout_reason', sa.String(length=100), nullable=True),
    sa.Column('logout_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('refresh_token_id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_index('idx_auth_session_active', 'auth_sessions', ['is_active'], unique=False)
    op.create_index('idx_auth_session_activity', 'auth_sessions', ['last_activity'], unique=False)
    op.create_index('idx_auth_session_expires', 'auth_sessions', ['expires_at'], unique=False)
    op.create_index('idx_auth_session_ip', 'auth_sessions', ['ip_address'], unique=False)
    op.create_index('idx_auth_session_refresh_token', 'auth_sessions', ['refresh_token_id'], unique=False)
    op.create_index('idx_auth_session_session_id', 'auth_sessions', ['session_id'], unique=False)
    op.create_index('idx_auth_session_user', 'auth_sessions', ['user_id', 'user_type'], unique=False)
    op.create_index('idx_auth_session_user_active', 'auth_sessions', ['user_id', 'user_type', 'is_active'], unique=False)
    op.create_table('backup_codes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_type', sa.String(length=50), nullable=False),
    sa.Column('code', sa.String(length=16), nullable=False),
    sa.Column('code_hash', sa.String(length=255), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.Column('used_ip', sa.String(length=45), nullable=True),
    sa.Column('used_user_agent', sa.String(length=500), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('batch_id', sa.String(length=64), nullable=False),
    sa.Column('sequence_number', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index('idx_backup_code_active', 'backup_codes', ['is_active'], unique=False)
    op.create_index('idx_backup_code_batch', 'backup_codes', ['batch_id'], unique=False)
    op.create_index('idx_backup_code_code', 'backup_codes', ['code'], unique=False)
    op.create_index('idx_backup_code_expires', 'backup_codes', ['expires_at'], unique=False)
    op.create_index('idx_backup_code_used', 'backup_codes', ['is_used'], unique=False)
    op.create_index('idx_backup_code_user', 'backup_codes', ['user_id', 'user_type'], unique=False)
    op.create_index('idx_backup_code_user_active', 'backup_codes', ['user_id', 'user_type', 'is_active'], unique=False)
    op.create_index('idx_backup_code_user_unused', 'backup_codes', ['user_id', 'user_type', 'is_used'], unique=False)
    op.create_table('invitations',
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('invited_by_user_id', sa.Integer(), nullable=False),
    sa.Column('invited_by_user_type', sa.String(length=50), nullable=False),
    sa.Column('token', sa.String(length=128), nullable=False),
    sa.Column('token_hash', sa.String(length=255), nullable=False),
    sa.Column('target_user_type', sa.String(length=50), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('suggested_roles', sa.Text(), nullable=True),
    sa.Column('suggested_areas', sa.Text(), nullable=True),
    sa.Column('suggested_academic_units', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('uses_count', sa.Integer(), nullable=False),
    sa.Column('first_used_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('registered_user_id', sa.Integer(), nullable=True),
    sa.Column('registered_user_type', sa.String(length=50), nullable=True),
    sa.Column('registered_at', sa.DateTime(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('context', sa.String(length=100), nullable=True),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('revoked_by_user_id', sa.Integer(), nullable=True),
    sa.Column('revocation_reason', sa.String(length=200), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index('idx_invitation_active', 'invitations', ['is_active'], unique=False)
    op.create_index('idx_invitation_context', 'invitations', ['context'], unique=False)
    op.create_index('idx_invitation_email', 'invitations', ['email'], unique=False)
    op.create_index('idx_invitation_email_active', 'invitations', ['email', 'is_active'], unique=False)
    op.create_index('idx_invitation_expires', 'invitations', ['expires_at'], unique=False)
    op.create_index('idx_invitation_invited_by', 'invitations', ['invited_by_user_id', 'invited_by_user_type'], unique=False)
    op.create_index('idx_invitation_registered', 'invitations', ['registered_user_id', 'registered_user_type'], unique=False)
    op.create_index('idx_invitation_revoked', 'invitations', ['revoked_at'], unique=False)
    op.create_index('idx_invitation_target_type', 'invitations', ['target_user_type'], unique=False)
    op.create_index('idx_invitation_token', 'invitations', ['token'], unique=False)
    op.create_table('login_attempts',
    sa.Column('identifier', sa.String(length=150), nullable=False),
    sa.Column('identifier_type', sa.String(length=20), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('device_fingerprint', sa.String(length=128), nullable=True),
    sa.Column('attempt_type', sa.String(length=30), nullable=False),
    sa.Column('is_successful', sa.Boolean(), nullable=False),
    sa.Column('failure_reason', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_type', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('risk_score', sa.Integer(), nullable=False),
    sa.Column('risk_factors', sa.Text(), nullable=True),
    sa.Column('is_suspicious', sa.Boolean(), nullable=False),
    sa.Column('is_location_change', sa.Boolean(), nullable=False),
    sa.Column('is_new_device', sa.Boolean(), nullable=False),
    sa.Column('is_security_event', sa.Boolean(), nullable=False),
    sa.Column('session_id', sa.String(length=128), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_login_attempt_device', 'login_attempts', ['is_new_device'], unique=False)
    op.create_index('idx_login_attempt_identifier', 'login_attempts', ['identifier'], unique=False)
    op.create_index('idx_login_attempt_ip', 'login_attempts', ['ip_address'], unique=False)
    op.create_index('idx_login_attempt_ip_time', 'login_attempts', ['ip_address', 'created_at'], unique=False)
    op.create_index('idx_login_attempt_location', 'login_attempts', ['is_location_change'], unique=False)
    op.create_index('idx_login_attempt_risk', 'login_attempts', ['risk_score'], unique=False)
    op.create_index('idx_login_attempt_security', 'login_attempts', ['is_security_event'], unique=False)
    op.create_index('idx_login_attempt_successful', 'login_attempts', ['is_successful'], unique=False)
    op.create_index('idx_login_attempt_suspicious', 'login_attempts', ['is_suspicious'], unique=False)
    op.create_index('idx_login_attempt_time', 'login_attempts', ['created_at'], unique=False)
    op.create_index('idx_login_attempt_user', 'login_attempts', ['user_id', 'user_type'], unique=False)
    op.create_index('idx_login_attempt_user_time', 'login_attempts', ['user_id', 'user_type', 'created_at'], unique=False)
    op.create_table('oauth_accounts',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_type', sa.String(length=50), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('provider_user_id', sa.String(length=100), nullable=False),
    sa.Column('provider_username', sa.String(length=100), nullable=True),
    sa.Column('provider_email', sa.String(length=150), nullable=True),
    sa.Column('provider_name', sa.String(length=200), nullable=True),
    sa.Column('provider_picture', sa.String(length=500), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=False),
    sa.Column('linked_at', sa.DateTime(), nullable=False),
    sa.Column('linked_ip', sa.String(length=45), nullable=True),
    sa.Column('granted_scopes', sa.String(length=500), nullable=True),
    sa.Column('provider_metadata', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_oauth_account_active', 'oauth_accounts', ['is_active'], unique=False)
    op.create_index('idx_oauth_account_last_login', 'oauth_accounts', ['last_login_at'], unique=False)
    op.create_index('idx_oauth_account_provider', 'oauth_accounts', ['provider'], unique=False)
    op.create_index('idx_oauth_account_provider_email', 'oauth_accounts', ['provider_email'], unique=False)
    op.create_index('idx_oauth_account_provider_user', 'oauth_accounts', ['provider', 'provider_user_id'], unique=False)
    op.create_index('idx_oauth_account_user', 'oauth_accounts', ['user_id', 'user_type'], unique=False)
    op.create_index('idx_oauth_account_user_active', 'oauth_accounts', ['user_id', 'user_type', 'is_active'], unique=False)
    op.create_index('idx_oauth_account_user_primary', 'oauth_accounts', ['user_id', 'user_type', 'is_primary'], unique=False)
    op.create_index('idx_oauth_account_verified', 'oauth_accounts', ['is_verified'], unique=False)
    op.create_table('totp_devices',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_type', sa.String(length=50), nullable=False),
    sa.Column('device_name', sa.String(length=100), nullable=False),
    sa.Column('device_id', sa.String(length=64), nullable=False),
    sa.Column('secret_key', sa.String(length=32), nullable=False),
    sa.Column('algorithm', sa.String(length=10), nullable=False),
    sa.Column('digits', sa.Integer(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('use_count', sa.Integer(), nullable=False),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('setup_completed_at', sa.DateTime(), nullable=True),
    sa.Column('last_counter', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('device_id')
    )
    op.create_index('idx_totp_device_active', 'totp_devices', ['is_active'], unique=False)
    op.create_index('idx_totp_device_device_id', 'totp_devices', ['device_id'], unique=False)
    op.create_index('idx_totp_device_primary', 'totp_devices', ['user_id', 'user_type', 'is_primary'], unique=False)
    op.create_index('idx_totp_device_user', 'totp_devices', ['user_id', 'user_type'], unique=False)
    op.create_index('idx_totp_device_user_active', 'totp_devices', ['user_id', 'user_type', 'is_active'], unique=False)
    op.create_index('idx_totp_device_user_verified', 'totp_devices', ['user_id', 'user_type', 'is_verified'], unique=False)
    op.create_index('idx_totp_device_verified', 'totp_devices', ['is_verified'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_totp_device_verified', table_name='totp_devices')
    op.drop_index('idx_totp_device_user_verified', table_name='totp_devices')
    op.drop_index('idx_totp_device_user_active', table_name='totp_devices')
    op.drop_index('idx_totp_device_user', table_name='totp_devices')
    op.drop_index('idx_totp_device_primary', table_name='totp_devices')
    op.drop_index('idx_totp_device_device_id', table_name='totp_devices')
    op.drop_index('idx_totp_device_active', table_name='totp_devices')
    op.drop_table('totp_devices')
    op.drop_index('idx_oauth_account_verified', table_name='oauth_accounts')
    op.drop_index('idx_oauth_account_user_primary', table_name='oauth_accounts')
    op.drop_index('idx_oauth_account_user_active', table_name='oauth_accounts')
    op.drop_index('idx_oauth_account_user', table_name='oauth_accounts')
    op.drop_index('idx_oauth_account_provider_user', table_name='oauth_accounts')
    op.drop_index('idx_oauth_account_provider_email', table_name='oauth_accounts')
    op.drop_index('idx_oauth_account_provider', table_name='oauth_accounts')
    op.drop_index('idx_oauth_account_last_login', table_name='oauth_accounts')
    op.drop_index('idx_oauth_account_active', table_name='oauth_accounts')
    op.drop_table('oauth_accounts')
    op.drop_index('idx_login_attempt_user_time', table_name='login_attempts')
    op.drop_index('idx_login_attempt_user', table_name='login_attempts')
    op.drop_index('idx_login_attempt_time', table_name='login_attempts')
    op.drop_index('idx_login_attempt_suspicious', table_name='login_attempts')
    op.drop_index('idx_login_attempt_successful', table_name='login_attempts')
    op.drop_index('idx_login_attempt_security', table_name='login_attempts')
    op.drop_index('idx_login_attempt_risk', table_name='login_attempts')
    op.drop_index('idx_login_attempt_location', table_name='login_attempts')
    op.drop_index('idx_login_attempt_ip_time', table_name='login_attempts')
    op.drop_index('idx_login_attempt_ip', table_name='login_attempts')
    op.drop_index('idx_login_attempt_identifier', table_name='login_attempts')
    op.drop_index('idx_login_attempt_device', table_name='login_attempts')
    op.drop_table('login_attempts')
    op.drop_index('idx_invitation_token', table_name='invitations')
    op.drop_index('idx_invitation_target_type', table_name='invitations')
    op.drop_index('idx_invitation_revoked', table_name='invitations')
    op.drop_index('idx_invitation_registered', table_name='invitations')
    op.drop_index('idx_invitation_invited_by', table_name='invitations')
    op.drop_index('idx_invitation_expires', table_name='invitations')
    op.drop_index('idx_invitation_email_active', table_name='invitations')
    op.drop_index('idx_invitation_email', table_name='invitations')
    op.drop_index('idx_invitation_context', table_name='invitations')
    op.drop_index('idx_invitation_active', table_name='invitations')
    op.drop_table('invitations')
    op.drop_index('idx_backup_code_user_unused', table_name='backup_codes')
    op.drop_index('idx_backup_code_user_active', table_name='backup_codes')
    op.drop_index('idx_backup_code_user', table_name='backup_codes')
    op.drop_index('idx_backup_code_used', table_name='backup_codes')
    op.drop_index('idx_backup_code_expires', table_name='backup_codes')
    op.drop_index('idx_backup_code_code', table_name='backup_codes')
    op.drop_index('idx_backup_code_batch', table_name='backup_codes')
    op.drop_index('idx_backup_code_active', table_name='backup_codes')
    op.drop_table('backup_codes')
    op.drop_index('idx_auth_session_user_active', table_name='auth_sessions')
    op.drop_index('idx_auth_session_user', table_name='auth_sessions')
    op.drop_index('idx_auth_session_session_id', table_name='auth_sessions')
    op.drop_index('idx_auth_session_refresh_token', table_name='auth_sessions')
    op.drop_index('idx_auth_session_ip', table_name='auth_sessions')
    op.drop_index('idx_auth_session_expires', table_name='auth_sessions')
    op.drop_index('idx_auth_session_activity', table_name='auth_sessions')
    op.drop_index('idx_auth_session_active', table_name='auth_sessions')
    op.drop_table('auth_sessions')
    # ### end Alembic commands ###