"""Add CMS models: Category, Video, Gallery

Revision ID: b33ff31c4a65
Revises: 449ec97c3fce
Create Date: 2025-06-10 19:30:04.105619-06:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'b33ff31c4a65'
down_revision = '449ec97c3fce'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('name', sa.String(length=100), nullable=False, comment='Category name (graduación, conferencia, evento, fotografías)'),
    sa.Column('description', sa.Text(), nullable=True, comment='Category description'),
    sa.Column('academic_unit_id', sa.Integer(), nullable=False, comment='Foreign key to academic units for filtering'),
    sa.Column('is_active', sa.String(length=1), nullable=False, comment='Whether category is active (Y/N)'),
    sa.Column('sort_order', sa.Integer(), nullable=False, comment='Display order within academic unit'),
    sa.Column('slug', sa.String(length=120), nullable=True, comment='URL-friendly version of name'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Internal unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='User ID who last updated this record'),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_units.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_index('idx_category_academic_unit', ['academic_unit_id'], unique=False)
        batch_op.create_index('idx_category_active', ['is_active'], unique=False)
        batch_op.create_index('idx_category_name', ['name'], unique=False)
        batch_op.create_index('idx_category_name_unit', ['name', 'academic_unit_id'], unique=False)
        batch_op.create_index('idx_category_slug', ['slug'], unique=False)
        batch_op.create_index('idx_category_sort', ['sort_order'], unique=False)
        batch_op.create_index('idx_category_unit_active', ['academic_unit_id', 'is_active'], unique=False)
        batch_op.create_index('idx_category_unit_sort', ['academic_unit_id', 'sort_order'], unique=False)

    op.create_table('galleries',
    sa.Column('title', sa.String(length=200), nullable=False, comment='Gallery title'),
    sa.Column('subtitle', sa.String(length=300), nullable=True, comment='Gallery subtitle'),
    sa.Column('description', sa.Text(), nullable=True, comment='Gallery description'),
    sa.Column('photos', sa.JSON(), nullable=True, comment='JSON array of photo URLs/paths'),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True, comment='Thumbnail for gallery cards'),
    sa.Column('event_date', sa.Date(), nullable=False, comment='Date of the event'),
    sa.Column('tags', sa.Text(), nullable=True, comment='Comma-separated tags (evento, fisicc, 2024)'),
    sa.Column('photo_count', sa.Integer(), nullable=False, comment='Total number of photos in gallery'),
    sa.Column('category_id', sa.Integer(), nullable=False, comment='Foreign key to categories'),
    sa.Column('author_id', sa.Integer(), nullable=False, comment='Foreign key to internal users (author)'),
    sa.Column('is_published', sa.String(length=1), nullable=False, comment='Whether gallery is published (Y/N)'),
    sa.Column('is_featured', sa.String(length=1), nullable=False, comment='Whether gallery is featured (Y/N)'),
    sa.Column('slug', sa.String(length=250), nullable=True, comment='URL-friendly version of title'),
    sa.Column('view_count', sa.Integer(), nullable=False, comment='Number of views'),
    sa.Column('allow_download', sa.String(length=1), nullable=False, comment='Whether photos can be downloaded (Y/N)'),
    sa.Column('id', mysql.CHAR(length=36), nullable=False, comment='Public unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', mysql.CHAR(length=36), nullable=True, comment='User UUID who created this record'),
    sa.Column('updated_by', mysql.CHAR(length=36), nullable=True, comment='User UUID who last updated this record'),
    sa.ForeignKeyConstraint(['author_id'], ['internal_users.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    with op.batch_alter_table('galleries', schema=None) as batch_op:
        batch_op.create_index('idx_gallery_author', ['author_id'], unique=False)
        batch_op.create_index('idx_gallery_category', ['category_id'], unique=False)
        batch_op.create_index('idx_gallery_category_date', ['category_id', 'event_date'], unique=False)
        batch_op.create_index('idx_gallery_category_published', ['category_id', 'is_published'], unique=False)
        batch_op.create_index('idx_gallery_category_published_date', ['category_id', 'is_published', 'event_date'], unique=False)
        batch_op.create_index('idx_gallery_event_date', ['event_date'], unique=False)
        batch_op.create_index('idx_gallery_featured', ['is_featured'], unique=False)
        batch_op.create_index('idx_gallery_photo_count', ['photo_count'], unique=False)
        batch_op.create_index('idx_gallery_published', ['is_published'], unique=False)
        batch_op.create_index('idx_gallery_published_date', ['is_published', 'event_date'], unique=False)
        batch_op.create_index('idx_gallery_published_featured', ['is_published', 'is_featured'], unique=False)
        batch_op.create_index('idx_gallery_slug', ['slug'], unique=False)
        batch_op.create_index('idx_gallery_title', ['title'], unique=False)
        batch_op.create_index('idx_gallery_views', ['view_count'], unique=False)

    op.create_table('videos',
    sa.Column('title', sa.String(length=200), nullable=False, comment='Video title'),
    sa.Column('subtitle', sa.String(length=300), nullable=True, comment='Video subtitle'),
    sa.Column('description', sa.Text(), nullable=True, comment='Video description'),
    sa.Column('embed_url', sa.String(length=500), nullable=False, comment='YouTube embed URL or future AWS/external service URL'),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True, comment='Thumbnail image URL'),
    sa.Column('event_date', sa.Date(), nullable=False, comment='Date of the event (NOT publication date)'),
    sa.Column('tags', sa.Text(), nullable=True, comment='Comma-separated tags (evento, fisicc, 2024)'),
    sa.Column('category_id', sa.Integer(), nullable=False, comment='Foreign key to categories'),
    sa.Column('author_id', sa.Integer(), nullable=False, comment='Foreign key to internal users (author)'),
    sa.Column('is_published', sa.String(length=1), nullable=False, comment='Whether video is published (Y/N)'),
    sa.Column('is_featured', sa.String(length=1), nullable=False, comment='Whether video is featured (Y/N)'),
    sa.Column('slug', sa.String(length=250), nullable=True, comment='URL-friendly version of title'),
    sa.Column('view_count', sa.Integer(), nullable=False, comment='Number of views'),
    sa.Column('id', mysql.CHAR(length=36), nullable=False, comment='Public unique identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', mysql.CHAR(length=36), nullable=True, comment='User UUID who created this record'),
    sa.Column('updated_by', mysql.CHAR(length=36), nullable=True, comment='User UUID who last updated this record'),
    sa.ForeignKeyConstraint(['author_id'], ['internal_users.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    with op.batch_alter_table('videos', schema=None) as batch_op:
        batch_op.create_index('idx_video_author', ['author_id'], unique=False)
        batch_op.create_index('idx_video_category', ['category_id'], unique=False)
        batch_op.create_index('idx_video_category_date', ['category_id', 'event_date'], unique=False)
        batch_op.create_index('idx_video_category_published', ['category_id', 'is_published'], unique=False)
        batch_op.create_index('idx_video_category_published_date', ['category_id', 'is_published', 'event_date'], unique=False)
        batch_op.create_index('idx_video_event_date', ['event_date'], unique=False)
        batch_op.create_index('idx_video_featured', ['is_featured'], unique=False)
        batch_op.create_index('idx_video_published', ['is_published'], unique=False)
        batch_op.create_index('idx_video_published_date', ['is_published', 'event_date'], unique=False)
        batch_op.create_index('idx_video_published_featured', ['is_published', 'is_featured'], unique=False)
        batch_op.create_index('idx_video_slug', ['slug'], unique=False)
        batch_op.create_index('idx_video_title', ['title'], unique=False)
        batch_op.create_index('idx_video_views', ['view_count'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('videos', schema=None) as batch_op:
        batch_op.drop_index('idx_video_views')
        batch_op.drop_index('idx_video_title')
        batch_op.drop_index('idx_video_slug')
        batch_op.drop_index('idx_video_published_featured')
        batch_op.drop_index('idx_video_published_date')
        batch_op.drop_index('idx_video_published')
        batch_op.drop_index('idx_video_featured')
        batch_op.drop_index('idx_video_event_date')
        batch_op.drop_index('idx_video_category_published_date')
        batch_op.drop_index('idx_video_category_published')
        batch_op.drop_index('idx_video_category_date')
        batch_op.drop_index('idx_video_category')
        batch_op.drop_index('idx_video_author')

    op.drop_table('videos')
    with op.batch_alter_table('galleries', schema=None) as batch_op:
        batch_op.drop_index('idx_gallery_views')
        batch_op.drop_index('idx_gallery_title')
        batch_op.drop_index('idx_gallery_slug')
        batch_op.drop_index('idx_gallery_published_featured')
        batch_op.drop_index('idx_gallery_published_date')
        batch_op.drop_index('idx_gallery_published')
        batch_op.drop_index('idx_gallery_photo_count')
        batch_op.drop_index('idx_gallery_featured')
        batch_op.drop_index('idx_gallery_event_date')
        batch_op.drop_index('idx_gallery_category_published_date')
        batch_op.drop_index('idx_gallery_category_published')
        batch_op.drop_index('idx_gallery_category_date')
        batch_op.drop_index('idx_gallery_category')
        batch_op.drop_index('idx_gallery_author')

    op.drop_table('galleries')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index('idx_category_unit_sort')
        batch_op.drop_index('idx_category_unit_active')
        batch_op.drop_index('idx_category_sort')
        batch_op.drop_index('idx_category_slug')
        batch_op.drop_index('idx_category_name_unit')
        batch_op.drop_index('idx_category_name')
        batch_op.drop_index('idx_category_active')
        batch_op.drop_index('idx_category_academic_unit')

    op.drop_table('categories')
    # ### end Alembic commands ###